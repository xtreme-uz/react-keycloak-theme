{"version":3,"file":"static/js/4339.ea5ffb53.chunk.js","mappings":"+aAsBMA,GAAQC,EAAAA,EAAAA,OACb,YAI6D,IAH5DC,EAG2D,EAH3DA,UACAC,EAE2D,EAF3DA,KACGC,GACwD,YACnDC,EAAQH,EAARG,IAmBR,IAjBAC,EAAAA,EAAAA,IAAiB,CAChBJ,UAAAA,EACA,qBAAuB,WAAvB,8BAAwB,mGAASK,EAAT,EAASA,mBAAT,SAEMC,MAEtB,OADED,EACWE,EACFC,GAEZC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IAPI,cAEjBC,EAFiB,yBAShBA,GATgB,2CAAxB,mDAAuB,MAaxBC,EAAAA,EAAAA,IAAyBC,EAAAA,sBAEKC,IAA1BD,EAAAA,gBAAAA,MACH,OAAO,KAGR,IAAQE,EAAgBf,EAAhBe,IAAKC,EAAWhB,EAAXgB,OAEb,OACC,SAACC,EAAA,GAAD,2BACOlB,UAAAA,EAAWC,KAAAA,GAASC,IAD3B,IAECiB,8BAA8B,EAC9BC,gBAAgB,EAChBC,WAAYL,EAAI,cAChBM,UACC,iCACC,gBAAKC,GAAG,gBAAR,SAAyBT,EAAAA,gBAAAA,SACzB,kBAAMU,UAAU,eAAeC,OAAQtB,EAAIuB,YAAaC,OAAO,OAA/D,WACC,kBACCH,WAAWI,EAAAA,EAAAA,GACV1B,EAAM2B,cACN3B,EAAM2B,cACN3B,EAAM2B,cACN3B,EAAM4B,qBACN5B,EAAM6B,oBAEPC,KAAK,SACLT,GAAG,YACHU,KAAK,SACLC,MAAOjB,EAAO,eAEf,kBACCO,WAAWI,EAAAA,EAAAA,GAAK1B,EAAM2B,cAAe3B,EAAMiC,qBAAsBjC,EAAM6B,oBACvEC,KAAK,SACLT,GAAG,aACHU,KAAK,SACLC,MAAOjB,EAAO,mBAGhB,gBAAKO,UAAU,kBAMnB,IAGF,G","sources":["KcApp/Terms.tsx"],"sourcesContent":["import { memo } from \"react\";\nimport Template from \"keycloakify/lib/components/Template\";\nimport type { KcProps } from \"keycloakify\";\nimport { useDownloadTerms } from \"keycloakify\";\nimport type { KcContext } from \"./kcContext\";\nimport type { I18n } from \"./i18n\";\nimport { evtTermMarkdown } from \"keycloakify/lib/components/Terms\";\nimport { useRerenderOnStateChange } from \"evt/hooks\";\nimport tos_en_url from \"./tos_en.md\";\nimport tos_fr_url from \"./tos_fr.md\";\nimport { clsx } from \"keycloakify/lib/tools/clsx\";\n\n/**\n * NOTE: Yo do not need to do all this to put your own Terms and conditions\n * this is if you want component level customization.  \n * If the default works for you you can just use the useDownloadTerms hook \n * in the KcApp.tsx\n * Example: https://github.com/garronej/keycloakify-starter/blob/a20c21b2aae7c6dc6dbea294f3d321955ddf9355/src/KcApp/KcApp.tsx#L14-L30\n */\n\ntype KcContext_Terms = Extract<KcContext, { pageId: \"terms.ftl\" }>;\n\nconst Terms = memo(\n\t({\n\t\tkcContext,\n\t\ti18n,\n\t\t...props\n\t}: { kcContext: KcContext_Terms; i18n: I18n } & KcProps) => {\n\t\tconst { url } = kcContext;\n\n\t\tuseDownloadTerms({\n\t\t\tkcContext,\n\t\t\t\"downloadTermMarkdown\": async ({ currentLanguageTag }) => {\n\n\t\t\t\tconst markdownString = await fetch((() => {\n\t\t\t\t\tswitch (currentLanguageTag) {\n\t\t\t\t\t\tcase \"fr\": return tos_fr_url;\n\t\t\t\t\t\tdefault: return tos_en_url;\n\t\t\t\t\t}\n\t\t\t\t})()).then(response => response.text());\n\n\t\t\t\treturn markdownString;\n\t\t\t},\n\t\t});\n\n\t\tuseRerenderOnStateChange(evtTermMarkdown);\n\n\t\tif (evtTermMarkdown.state === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst { msg, msgStr } = i18n;\n\n\t\treturn (\n\t\t\t<Template\n\t\t\t\t{...{ kcContext, i18n, ...props }}\n\t\t\t\tdoFetchDefaultThemeResources={true}\n\t\t\t\tdisplayMessage={false}\n\t\t\t\theaderNode={msg(\"termsTitle\")}\n\t\t\t\tformNode={\n\t\t\t\t\t<>\n\t\t\t\t\t\t<div id=\"kc-terms-text\">{evtTermMarkdown.state}</div>\n\t\t\t\t\t\t<form className=\"form-actions\" action={url.loginAction} method=\"POST\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName={clsx(\n\t\t\t\t\t\t\t\t\tprops.kcButtonClass,\n\t\t\t\t\t\t\t\t\tprops.kcButtonClass,\n\t\t\t\t\t\t\t\t\tprops.kcButtonClass,\n\t\t\t\t\t\t\t\t\tprops.kcButtonPrimaryClass,\n\t\t\t\t\t\t\t\t\tprops.kcButtonLargeClass\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\tname=\"accept\"\n\t\t\t\t\t\t\t\tid=\"kc-accept\"\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tvalue={msgStr(\"doAccept\")}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName={clsx(props.kcButtonClass, props.kcButtonDefaultClass, props.kcButtonLargeClass)}\n\t\t\t\t\t\t\t\tname=\"cancel\"\n\t\t\t\t\t\t\t\tid=\"kc-decline\"\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tvalue={msgStr(\"doDecline\")}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t\t<div className=\"clearfix\" />\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t/>\n\t\t);\n\n\t},\n);\n\nexport default Terms;\n"],"names":["Terms","memo","kcContext","i18n","props","url","useDownloadTerms","currentLanguageTag","fetch","tos_fr_url","tos_en_url","then","response","text","markdownString","useRerenderOnStateChange","evtTermMarkdown","undefined","msg","msgStr","Template","doFetchDefaultThemeResources","displayMessage","headerNode","formNode","id","className","action","loginAction","method","clsx","kcButtonClass","kcButtonPrimaryClass","kcButtonLargeClass","name","type","value","kcButtonDefaultClass"],"sourceRoot":""}